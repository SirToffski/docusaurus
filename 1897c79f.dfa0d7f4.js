(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{128:function(e,t,n){"use strict";n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return g}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),l=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},f=function(e){var t=l(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=l(n),m=r,d=f["".concat(a,".").concat(m)]||f[m]||u[m]||i;return n?o.a.createElement(d,s({ref:t},p,{components:n})):o.a.createElement(d,s({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:r,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return f}));var r=n(1),o=n(6),i=(n(0),n(128)),a={id:"fish-prompt",title:"Fish Prompt"},s={id:"fish-prompt",title:"Fish Prompt",description:"## Usage",source:"@site/docs/fish-prompt.md",permalink:"/sirtoffski.github.io/docs/fish-prompt",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/fish-prompt.md",sidebar:"scripts",previous:{title:"Create IP black-list",permalink:"/sirtoffski.github.io/docs/block-that"}},c=[{value:"Usage",id:"usage",children:[]},{value:"Code",id:"code",children:[]}],p={rightToc:c},l="wrapper";function f(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)(l,Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"Not a script in and of itself. This is my ",Object(i.b)("inlineCode",{parentName:"p"},"fish_prompt.fish")," file."),Object(i.b)("h2",{id:"code"},"Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"# Default to Solarized colors because yimmy began as a Solarized theme\nif not set -q yimmy_solarized\n  set -U yimmy_solarized true\nend\n\nif test \"$yimmy_solarized\" = \"true\"\n  set -x LS_COLORS 'no=00;38;5;244:rs=0:di=00;38;5;33:ln=01;38;5;33:mh=00:pi=48;5;230;38;5;136;01:so=48;5;230;38;5;136;01:do=48;5;230;38;5;136;01:bd=48;5;230;38;5;244;01:cd=48;5;230;38;5;244;01:or=48;5;235;38;5;160:su=48;5;160;38;5;230:sg=48;5;136;38;5;230:ca=30;41:tw=48;5;64;38;5;230:ow=48;5;235;38;5;33:st=48;5;33;38;5;230:ex=01;38;5;64:*.tar=00;38;5;61:*.tgz=01;38;5;61:*.arj=01;38;5;61:*.taz=01;38;5;61:*.lzh=01;38;5;61:*.lzma=01;38;5;61:*.tlz=01;38;5;61:*.txz=01;38;5;61:*.zip=01;38;5;61:*.z=01;38;5;61:*.Z=01;38;5;61:*.dz=01;38;5;61:*.gz=01;38;5;61:*.lz=01;38;5;61:*.xz=01;38;5;61:*.bz2=01;38;5;61:*.bz=01;38;5;61:*.tbz=01;38;5;61:*.tbz2=01;38;5;61:*.tz=01;38;5;61:*.deb=01;38;5;61:*.rpm=01;38;5;61:*.jar=01;38;5;61:*.rar=01;38;5;61:*.ace=01;38;5;61:*.zoo=01;38;5;61:*.cpio=01;38;5;61:*.7z=01;38;5;61:*.rz=01;38;5;61:*.apk=01;38;5;61:*.jpg=00;38;5;136:*.JPG=00;38;5;136:*.jpeg=00;38;5;136:*.gif=00;38;5;136:*.bmp=00;38;5;136:*.pbm=00;38;5;136:*.pgm=00;38;5;136:*.ppm=00;38;5;136:*.tga=00;38;5;136:*.xbm=00;38;5;136:*.xpm=00;38;5;136:*.tif=00;38;5;136:*.tiff=00;38;5;136:*.png=00;38;5;136:*.svg=00;38;5;136:*.svgz=00;38;5;136:*.mng=00;38;5;136:*.pcx=00;38;5;136:*.dl=00;38;5;136:*.xcf=00;38;5;136:*.xwd=00;38;5;136:*.yuv=00;38;5;136:*.cgm=00;38;5;136:*.emf=00;38;5;136:*.eps=00;38;5;136:*.pdf=01;38;5;245:*.tex=01;38;5;245:*.rdf=01;38;5;245:*.owl=01;38;5;245:*.n3=01;38;5;245:*.tt=01;38;5;245:*.nt=01;38;5;245:*.log=00;38;5;240:*.bak=00;38;5;240:*.aux=00;38;5;240:*.bbl=00;38;5;240:*.blg=00;38;5;240:*.aac=00;38;5;166:*.au=00;38;5;166:*.flac=00;38;5;166:*.mid=00;38;5;166:*.midi=00;38;5;166:*.mka=00;38;5;166:*.mp3=00;38;5;166:*.mpc=00;38;5;166:*.ogg=00;38;5;166:*.ra=00;38;5;166:*.wav=00;38;5;166:*.axa=00;38;5;166:*.oga=00;38;5;166:*.spx=00;38;5;166:*.xspf=00;38;5;166:*.mov=01;38;5;166:*.mpg=01;38;5;166:*.mpeg=01;38;5;166:*.m2v=01;38;5;166:*.mkv=01;38;5;166:*.ogm=01;38;5;166:*.mp4=01;38;5;166:*.m4v=01;38;5;166:*.mp4v=01;38;5;166:*.vob=01;38;5;166:*.qt=01;38;5;166:*.nuv=01;38;5;166:*.wmv=01;38;5;166:*.asf=01;38;5;166:*.rm=01;38;5;166:*.rmvb=01;38;5;166:*.flc=01;38;5;166:*.avi=01;38;5;166:*.fli=01;38;5;166:*.flv=01;38;5;166:*.gl=01;38;5;166:*.axv=01;38;5;166:*.anx=01;38;5;166:*.ogv=01;38;5;166:*.ogx=01;38;5;166:'\n  set -e LSCOLORS\nend\n\nfunction fish_prompt\n  # Cache exit status\n  set -l last_status $status\n\n  # Just calculate these once, to save a few cycles when displaying the prompt\n  if not set -q __fish_prompt_hostname\n    set -g __fish_prompt_hostname (hostname|cut -d . -f 1)\n  end\n  if not set -q __fish_prompt_char\n    switch (id -u)\n      case 0\n        set -g __fish_prompt_char '#'\n      case '*'\n        set -g __fish_prompt_char '\u03bb'\n    end\n  end\n\n  # Setup colors\n  set -l normal (set_color normal)\n  set -l red (set_color red)\n  set -l cyan (set_color cyan)\n  set -l white (set_color white)\n  set -l gray (set_color normal)\n  set -l brwhite (set_color -o white)\n  set -l green (set_color green)\n  set -l purple (set_color af5fff)\n  set -l limegreen (set_color 87ff00)\n  set -l orange (set_color df5f00)\n  set -l hotpink (set_color df005f)\n  \n  if test \"$yimmy_solarized\" = \"true\"\n    set gray (set_color 87ff00)\n  end\n\n  # Configure __fish_git_prompt\n  set -g __fish_git_prompt_showdirtystate true\n  set -g __fish_git_prompt_showuntrackedfiles true\n  set -g __fish_git_prompt_showstashstate true\n  set -g __fish_git_prompt_color green\n  set -g __fish_git_prompt_color_flags red\n\n  # Color prompt char red for non-zero exit status\n  set -l pcolor $gray\n  if test $last_status -ne 0\n    set pcolor $red\n  end\n\n  # Line 1\n  echo -n $red'\u250c'$cyan$USER$white' at '$orange$__fish_prompt_hostname$white' in '$gray(pwd)$normal\n  __fish_git_prompt\n  # Check for gwip; does last commit log contain --wip--?\n  if begin; git log -n 1 2> /dev/null | grep -qc \"\\-\\-wip\\-\\-\"; end\n    echo -n $brwhite' WIP!'$normal\n  end\n  echo\n\n  # Line 2\n  echo -n $red'\u2514'$pcolor$white$__fish_prompt_char $normal\nend\n")))}f.isMDXComponent=!0}}]);